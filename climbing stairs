var climbStairs = function(n) {
    if( n<=2){
        return n; // this is acknowledge that we know there is only 2 ways to reach step 2 or 1 way to reach step 1
    } 

    const ways = new Array(n+1); // a place to store the ways +1 is accounting for 0

    ways[1]=1;
    ways[2]=2;

    for (let i = 3;i<=n;i++){
        ways[i]=ways[i-1]+ways[i-2];
    }
    return ways[n];
};
// Question
You are climbing a staircase. It takes n steps to reach the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?
Example 1:
Input: n = 2
Output: 2
Explanation: There are two ways to climb to the top.
1. 1 step + 1 step
2. 2 steps
Example 2:
Input: n = 3
Output: 3
Explanation: There are three ways to climb to the top.
1. 1 step + 1 step + 1 step
2. 1 step + 2 steps
3. 2 steps + 1 step

// Approach
// Check how many stepps there is
// if 1 or 2 stpes then return 1 or 2 ways
//I would user fibbonci. To find the last step i would need the steps before it
// need to do a loop starting at the 3 step because we know how many ways there is to climb if there is 2 steps
// Question is asking how many ways to reach the 5th step?? 
// we need to figure out how many way to reach the steps before the 5th step
